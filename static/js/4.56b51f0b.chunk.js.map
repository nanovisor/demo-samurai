{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","i","key","messagesElements","messages","m","newMessageBody","isAuth","dialogsItems","values","console","log","sendMessage","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"6EACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,sFCanKC,EAVI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,QCFvBC,EAJC,SAACT,GACb,OAAO,yBAAKG,UAAWC,IAAEC,QAASL,EAAMU,U,wCCEtCC,EAAcC,YAAiB,IAgBtBC,cAAU,CAACC,KAAM,2BAAjBD,EAdQ,SAACb,GACpB,OACI,0BAAMe,SAAUf,EAAMgB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUV,GACrBW,YAAY,qBACZd,KAAK,oBAEhB,6BAAK,6CCmBFe,MA5Bf,SAAiBvB,GACb,IAAIwB,EAAQxB,EAAMyB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAK,SAACC,EAAGC,GAAJ,OAAU,kBAAC,EAAD,CAAYtB,KAAMqB,EAAErB,KAAMuB,IAAKF,EAAE3B,GAAIA,GAAI2B,EAAE3B,QAC1F8B,EAAmBR,EAAMS,SAASL,KAAK,SAACM,EAAGJ,GAAJ,OAAU,kBAAC,EAAD,CAASpB,QAASwB,EAAE1B,KAAMuB,IAAKG,EAAEhC,QAQtF,OAPqBsB,EAAMW,eAOtBnC,EAAMoC,OAGP,yBAAKjC,UAAWC,IAAEuB,SACd,yBAAKxB,UAAWC,IAAEiC,cACbX,GAEL,yBAAKvB,UAAWC,IAAE6B,UACd,6BAAMD,IAEV,kBAAC,EAAD,CAAgBjB,SAfJ,SAACuB,GACjBC,QAAQC,IAAI,yBACZxC,EAAMyC,YAAYH,EAAOH,oBAGH,kBAAC,IAAD,CAAU5B,GAAI,Y,iCCE7BmC,sBACXC,aAhBkB,SAACnB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAKF,SAACmB,GACtB,MAAO,CACHH,YAAa,SAACN,GACVS,EAAUC,YAAmBV,SAOrCW,IAFWJ,CAGbnB","file":"static/js/4.56b51f0b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1EQEc\",\"dialogsItems\":\"Dialogs_dialogsItems__2ZwNk\",\"active\":\"Dialogs_active__1xR0t\",\"messages\":\"Dialogs_messages__3o0gw\",\"message\":\"Dialogs_message__2S3ty\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","\r\nimport React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength50]}\r\n                       placeholder=\"Enter your message\" \r\n                       name=\"newMassageBody\" />\r\n            </div>\r\n            <div><button>Send</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: \"dialog-add-message-form\"})(AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Redirect } from 'react-router';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport AddMessageForm from './AddMessageForm';\r\n\r\nfunction Dialogs(props) {\r\n    let state = props.dialogsPage\r\n    \r\n    let dialogsElements = state.dialogs.map( (d, i) => <DialogItem name={d.name} key={d.id} id={d.id} /> )\r\n    let messagesElements = state.messages.map( (m, i) => <Message message={m.name} key={m.id} /> )\r\n    let newMessageBody = state.newMessageBody\r\n\r\n    let addNewMessage = (values) => {\r\n        console.log('values.newMessageBody');\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'} />;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;","import Dialogs from './Dialogs';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        // isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch( sendMessageCreator(newMessageBody) )\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}